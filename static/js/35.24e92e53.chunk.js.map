{"version":3,"file":"static/js/35.24e92e53.chunk.js","mappings":"wRAgDA,EA5CiB,WACb,OAA0BA,EAAAA,EAAAA,UAAS,CAC/BC,OAAQ,GACRC,SAAS,EACTC,IAAK,OAHT,eAAOC,EAAP,KAAcC,EAAd,MAMAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,oGAGZF,GAAS,SAAAG,GAAS,yBAAUA,GAAV,IAAqBN,SAAS,OAHpC,UAIOO,EAAAA,EAAAA,MAJP,OAINC,EAJM,OAMZC,QAAQC,IAAIF,GAEZL,GAAS,SAAAG,GAAS,yBACXA,GADW,IAEdP,OAAO,GAAD,eAAMO,EAAUP,SAAhB,OAA2BS,EAAKG,UACtCX,SAAS,OAXD,gDAcZG,GAAS,SAAAG,GAAS,yBAAUA,GAAV,IAAqBN,SAAS,EAAOY,MAAK,UAdhD,yDAAH,qDAiBjBP,MAED,IAEH,IAAQN,EAAoBG,EAApBH,OAAQC,EAAYE,EAAZF,QAEhB,OACI,2BACI,iBAAKa,UAAU,YAAf,UAEKb,IAAW,sCACXc,QAAQf,EAAOgB,UAAY,2CAC3BD,QAAQf,EAAOgB,UAAW,SAACC,EAAA,EAAD,CAAYjB,OAAQA,W,4ECN/D,EA7BmB,SAAC,GAAgB,IAC1BkB,EADyB,EAAblB,OACMmB,KAAI,SAAAC,GAAK,OAC7B,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,UACI,eAAIR,UAAU,YAAd,SACXM,EAAMG,SAFuCH,EAAME,OAOhD,OACI,0BAEA,wBACKJ,Q,iMCjBPM,E,MAAWC,GAAAA,OAAa,CAC1BC,QAAS,+BAETC,OAAQ,CACJC,QAAS,mCACTC,SAAU,WAILrB,EAAS,mCAAG,sGACEgB,EAASM,IAAI,uBADf,uBACbrB,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,qDAKTsB,EAAe,mCAAG,WAAMC,GAAN,yFACJR,EAASM,IAAT,iBAAuBE,IADnB,uBACnBvB,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfwB,EAAe,mCAAG,WAAMD,GAAN,yFACJR,EAASM,IAAT,iBAAuBE,EAAvB,aADI,uBACnBvB,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfyB,EAAe,mCAAG,WAAMF,GAAN,yFACJR,EAASM,IAAT,iBAAuBE,EAAvB,aADI,uBACnBvB,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAIf0B,EAAY,mCAAG,WAAMC,GAAN,yFACDZ,EAASM,IAAT,gBAA8B,CACjDH,OAAQ,CACJS,MAAAA,KAHgB,uBAChB3B,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH","sources":["pages/HomePage/HomePage.jsx","pages/MoviesList/MoviesList.jsx","shared/services/movies.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport MoviesList from \"pages/MoviesList\";\nimport { getMovies } from \"../../shared/services/movies\";\n\nconst HomePage = () => {\n    const [state, setState] = useState({\n        movies: [],\n        loading: false,\n        err: null\n    });\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n                                   \n            try {\n                setState(prevState => ({ ...prevState, loading: true }))\n                const data = await getMovies();\n                \n                console.log(data);\n                \n                setState(prevState => ({\n                    ...prevState,\n                    movies: [...prevState.movies, ...data.results],\n                    loading: false\n                }))\n            } catch (error) {\n                setState(prevState => ({ ...prevState, loading: false, error }))\n            }\n        };\n        fetchMovies();\n        \n    }, []);\n\n    const { movies, loading } = state;\n\n    return (\n        <main>\n            <div className=\"container\">\n                \n                {loading && <p>...Loading</p>}\n                {Boolean(movies.length) &&  <h1>Trending today</h1>}\n                {Boolean(movies.length) && <MoviesList movies={movies} />}\n            </div>\n        </main>\n        \n    )\n}\n\nexport default HomePage;","import PropTypes from 'prop-types';\n\nimport { Link } from \"react-router-dom\";\n// import s from \"./movies-list.module.scss\"\n\n\nconst MoviesList = ({ movies }) => {\n    const elements = movies.map(movie => (\n        <Link to={`/movies/${movie.id}`} key={movie.id}>\n            <li className=\"list-item\" >\n{movie.title}\n            </li>\n        </Link>\n        \n    ))\n    return (\n        <div>\n      \n        <ul>\n            {elements}\n            </ul>\n        </div>\n    )\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,      \n    })\n  ),\n  };\n\n\nexport default MoviesList;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n     \n    params: {\n        api_key: \"f05a275bd04be2a259f3c9758d33fde7\",\n        language: \"en-US\",\n    }\n});\n\nexport const getMovies = async () => {\n    const { data } = await instance.get(\"/trending/movie/day\");\n    return data;\n};\n\nexport const getMovieDetails = async movieId => {\n    const { data } = await instance.get(`/movie/${movieId}`);\n    return data;\n};\n\nexport const getMovieCredits = async movieId => {\n    const { data } = await instance.get(`/movie/${movieId}/credits`);\n    return data;\n};\n\nexport const getMovieReviews = async movieId => {\n    const { data } = await instance.get(`/movie/${movieId}/reviews`);\n    return data;\n};\nexport const searchMovies = async query => {\n    const { data } = await instance.get(`/search/movie`, {\n        params: {\n            query,            \n        }\n    });\n    return data;\n};"],"names":["useState","movies","loading","err","state","setState","useEffect","fetchMovies","prevState","getMovies","data","console","log","results","error","className","Boolean","length","MoviesList","elements","map","movie","to","id","title","instance","axios","baseURL","params","api_key","language","get","getMovieDetails","movieId","getMovieCredits","getMovieReviews","searchMovies","query"],"sourceRoot":""}
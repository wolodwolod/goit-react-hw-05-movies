{"version":3,"file":"static/js/407.9549a39a.chunk.js","mappings":"gRACA,GAAgB,YAAc,6BAA6B,OAAS,wBAAwB,QAAU,0B,SCgCtG,EA7BuB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QAItB,OAFAC,QAAQC,IAAIF,IAIR,0BACA,eAAIG,UAAWC,EAAAA,YAAf,SACDJ,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,gBAAaL,UAAWC,EAAAA,YAAxB,WACI,gBAAID,UAAWC,EAAAA,OAAf,gCAAsCG,GAAtC,QACA,cAAGJ,UAAWC,EAAAA,QAAd,SAA0BI,MAFrBF,WC4CnB,EAjDgB,WAEhB,OAA0BG,EAAAA,EAAAA,UAAS,CAC3BT,QAAS,GACTU,SAAS,EACTC,IAAK,OAHb,eAAOC,EAAP,KAAcC,EAAd,KAMYC,GAAYC,EAAAA,EAAAA,MAAZD,QACRb,QAAQC,IAAIY,IAGZE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,oGAGlBJ,GAAS,SAAAK,GAAS,yBAAUA,GAAV,IAAqBR,SAAS,OAH9B,UAICS,EAAAA,EAAAA,IAAgBL,GAJjB,OAIZM,EAJY,OAQlBP,GAAS,SAAAK,GAAS,yBACXA,GADW,IAEdlB,QAAQ,GAAD,eAAMkB,EAAUlB,UAAhB,OAA4BoB,EAAKC,UACxCX,SAAS,OAXK,gDAclBG,GAAS,SAAAK,GAAS,yBAAUA,GAAV,IAAqBR,SAAS,EAAOY,MAAK,UAd1C,yDAAH,qDAiBvBL,MAED,CAACH,IAEJ,IAAQd,EAAqBY,EAArBZ,QAASU,EAAYE,EAAZF,QAEjB,OACI,2BACI,iBAAKP,UAAU,YAAf,UACKO,IAAW,sCAEXa,QAAQvB,EAAQwB,SAAU,SAAC,EAAD,CAAgBxB,QAASA,KAChD,cAAGyB,MAAO,CAAEC,UAAW,QAAvB,6D,iMChDdC,E,MAAWC,GAAAA,OAAa,CAC1BC,QAAS,+BAETC,OAAQ,CACJC,QAAS,mCACTC,SAAU,WAILC,EAAS,mCAAG,sGACEN,EAASO,IAAI,uBADf,uBACbd,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,qDAKTe,EAAe,mCAAG,WAAMrB,GAAN,yFACJa,EAASO,IAAT,iBAAuBpB,IADnB,uBACnBM,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfgB,EAAe,mCAAG,WAAMtB,GAAN,yFACJa,EAASO,IAAT,iBAAuBpB,EAAvB,aADI,uBACnBM,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfD,EAAe,mCAAG,WAAML,GAAN,yFACJa,EAASO,IAAT,iBAAuBpB,EAAvB,aADI,uBACnBM,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAIfiB,EAAY,mCAAG,WAAMC,GAAN,yFACDX,EAASO,IAAT,gBAA8B,CACjDJ,OAAQ,CACJQ,MAAAA,KAHgB,uBAChBlB,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH","sources":["webpack://react-homework-template/./src/pages/Reviews/reviews.module.scss?21e5","pages/Reviews/ReviewsContent.jsx","pages/Reviews/Reviews.jsx","shared/services/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"reviews_reviewsList__APvdJ\",\"author\":\"reviews_author__91zCM\",\"content\":\"reviews_content__mskUd\"};","import PropTypes from 'prop-types';\n\nimport s from \"./reviews.module.scss\"\n\nconst ReviewsContent = ({ reviews }) => {\n    // const reviews_5 = reviews.slice(0, 5);\n    console.log(reviews);\n\n    return (\n      \n        <div>           \n        <ul className={s.reviewsList}>\n      {reviews.map(({ id, author, content }) => (\n          <li key={id} className={s.reviewsItem}>\n              <h4 className={s.author}> {`Author: ${author}`} </h4>            \n              <p className={s.content}>{content}</p>\n        </li>      \n      ))}\n    </ul>  \n        </div>\n       \n    )\n};\n\nReviewsContent.propTypes = {\n    reviews: PropTypes.arrayOf\n        (PropTypes.shape({\n      id: PropTypes.string,\n      author: PropTypes.string,      \n      content: PropTypes.string,      \n    })),\n  };\n\nexport default ReviewsContent;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"../../shared/services/movies\";\nimport ReviewsContent from \"./ReviewsContent\";\n// \n// import s from \"./reviews.module.scss\"\n\n\nconst Reviews = () => {\n\nconst [state, setState] = useState({\n        reviews: [],\n        loading: false,\n        err: null\n});\n    \n    const { movieId } = useParams();\n    console.log(movieId);\n      \n\n    useEffect(() => {\n        const fetchMovieReviews = async () => {\n                                   \n            try {\n                setState(prevState => ({ ...prevState, loading: true }))\n                const data = await getMovieReviews(movieId);\n                \n                // console.log(data.results);\n                \n                setState(prevState => ({\n                    ...prevState,\n                    reviews: [...prevState.reviews, ...data.results],                    \n                    loading: false\n                }))\n            } catch (error) {\n                setState(prevState => ({ ...prevState, loading: false, error }))\n            }\n        };\n        fetchMovieReviews();\n        \n    }, [movieId]);\n\n    const { reviews, loading } = state;\n\n    return (\n        <main>         \n            <div className=\"container\">\n                {loading && <p>...Loading</p>}\n            \n                {Boolean(reviews.length) ? <ReviewsContent reviews={reviews} /> :\n                    <p style={{ marginTop: '15px' }}>We don't have any reviews for this movie</p>}            \n\n            </div>           \n        </main>      \n    )\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n     \n    params: {\n        api_key: \"f05a275bd04be2a259f3c9758d33fde7\",\n        language: \"en-US\",\n    }\n});\n\nexport const getMovies = async () => {\n    const { data } = await instance.get(\"/trending/movie/day\");\n    return data;\n};\n\nexport const getMovieDetails = async movieId => {\n    const { data } = await instance.get(`/movie/${movieId}`);\n    return data;\n};\n\nexport const getMovieCredits = async movieId => {\n    const { data } = await instance.get(`/movie/${movieId}/credits`);\n    return data;\n};\n\nexport const getMovieReviews = async movieId => {\n    const { data } = await instance.get(`/movie/${movieId}/reviews`);\n    return data;\n};\nexport const searchMovies = async query => {\n    const { data } = await instance.get(`/search/movie`, {\n        params: {\n            query,            \n        }\n    });\n    return data;\n};"],"names":["reviews","console","log","className","s","map","id","author","content","useState","loading","err","state","setState","movieId","useParams","useEffect","fetchMovieReviews","prevState","getMovieReviews","data","results","error","Boolean","length","style","marginTop","instance","axios","baseURL","params","api_key","language","getMovies","get","getMovieDetails","getMovieCredits","searchMovies","query"],"sourceRoot":""}
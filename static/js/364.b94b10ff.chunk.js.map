{"version":3,"file":"static/js/364.b94b10ff.chunk.js","mappings":"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","sources":["pages/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/shared/components/SearchForm/search-form.module.scss?1032","shared/components/SearchForm/SearchForm.jsx","pages/MoviesPage/movies-page.module.scss","pages/MoviesPage/MoviesPage.jsx","shared/services/movies.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\n// import s from \"./movies-list.module.scss\"\n\nconst MoviesList = ({ movies }) => {\n    const elements = movies.map(movie => (\n        <Link to={`/movies/${movie.id}`} key={movie.id}>\n            <li className=\"list-item\" >\n{movie.title}\n            </li>\n        </Link>\n        \n    ))\n    return (\n        <div>\n      \n        <ul>\n            {elements}\n            </ul>\n        </div>\n    )\n};\n\nexport default MoviesList;","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"search-form_searchForm__YQ8x9\"};","import { useState, useEffect, createRef, memo } from \"react\";\nimport s from \"./search-form.module.scss\"\n\nconst SearchForm = ({onSubmit}) => {\n    // console.log(\"Render\")\n    \n    const [form, setForm] = useState({\n        search: \"\"\n    });\n\n    const inputRef = createRef(null);\n\n    useEffect(()=> {\n        if(inputRef.current) {\n            inputRef.current.focus()\n        }\n    }, [inputRef]);\n\n    const handleChange = ({target}) => {\n        const {name, value} = target;\n        setForm(prevState => {\n            return {\n                ...prevState,\n                [name]: value\n            }\n        });\nconsole.log(form.search)\n    }\n\n    const handleSubmit = (e)=> {\n        e.preventDefault();\n        onSubmit(form);\n        setForm({\n            search: \"\"\n        });\n        console.log(form.search); \n    }\n\n    return (\n        <form className={s.searchForm } onSubmit={handleSubmit} action=\"\">\n            <input ref={inputRef} onChange={handleChange} value={form.search} type=\"text\" name=\"search\" placeholder=\"Movie title\" />\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}\n\nexport default memo(SearchForm);","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect, useRef, useCallback } from \"react\";\n// import MoviesList from \"pages/MoviesList\";\nimport { searchMovies } from \"../../shared/services/movies\";\nimport MoviesList from \"pages/MoviesList\";\nimport SearchForm from \"shared/components/SearchForm\";\nimport s from \"./movies-page.module.scss\";\n\nconst MoviesPage = () => {\n    const [state, setState] = useState({\n        query: \"\",\n        movies: [],\n        loading: false,\n        err: null\n    });\n    const { query, movies, loading, error } = state;\n\n    const firstRenderRef = useRef(true);\n\n    useEffect(() => {\n\n        if (firstRenderRef.current) {\n    firstRenderRef.current = false;\n        } else {\n            const fetchMovies = async () => {\n                                   \n            try {\n                setState(prevState => ({ ...prevState, loading: true }))\n                const data = await searchMovies(query);\n                \n                console.log(data);\n                \n                setState(prevState => ({\n                    ...prevState,\n                    movies: [...prevState.movies, ...data.results],\n                    loading: false\n                }))\n            } catch (error) {\n                setState(prevState => ({ ...prevState, loading: false, error }))\n            }\n        };\n        fetchMovies();}        \n        \n    }, [query]);\n\n    const changeQuery = useCallback(({ search }) => {\n        setState({\n            ...state,\n            query: search\n        }\n           \n        )\n        // console.log(search);\n        // console.log(query);\n        \n    }, [state]);\n\n\n    return (\n        <main>\n            <div className=\"container\">\n <div className={s.searchContainer}>\n                <SearchForm onSubmit={changeQuery} />\n            </div>\n            \n            {error && <h2>Search error</h2>}\n            {!movies.length && query && !loading && !error && <h2>We don't have any movies for this search</h2>}\n                \n                {loading && <p>...Loading</p>}\n                {Boolean(movies.length) && <MoviesList movies={movies} />}\n            </div>\n        </main>\n        \n    )\n}\n\nexport default MoviesPage;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n     \n    params: {\n        api_key: \"f05a275bd04be2a259f3c9758d33fde7\",\n        language: \"en-US\",\n    }\n});\n\nexport const getMovies = async () => {\n    const { data } = await instance.get(\"/trending/movie/day\");\n    return data;\n};\n\nexport const getMovieDetails = async movieId => {\n    const { data } = await instance.get(`/movie/${movieId}`);\n    return data;\n};\n\nexport const getMovieCredits = async movieId => {\n    const { data } = await instance.get(`/movie/${movieId}/credits`);\n    return data;\n};\n\nexport const getMovieReviews = async movieId => {\n    const { data } = await instance.get(`/movie/${movieId}/reviews`);\n    return data;\n};\nexport const searchMovies = async query => {\n    const { data } = await instance.get(`/search/movie`, {\n        params: {\n            query,            \n        }\n    });\n    return data;\n};"],"names":["elements","movies","map","movie","to","id","className","title","SearchForm","onSubmit","useState","search","form","setForm","inputRef","createRef","useEffect","current","focus","s","e","preventDefault","console","log","action","ref","onChange","target","name","value","prevState","type","placeholder","memo","query","loading","err","state","setState","error","firstRenderRef","useRef","fetchMovies","searchMovies","data","results","changeQuery","useCallback","length","Boolean","MoviesList","instance","axios","baseURL","params","api_key","language","getMovies","get","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}